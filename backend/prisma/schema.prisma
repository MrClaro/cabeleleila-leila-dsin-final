generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// Usuário
model user {
  id           Int           @id @default(autoincrement())
  name         String
  email        String        @unique
  password     String
  phone        String?
  role         role          @default(CLIENT)
  appointments appointment[]
  created_at   DateTime      @default(now())
  updated_at   DateTime      @updatedAt
}

// Cargo
enum role {
  CLIENT
  EMPLOYEE
  ADMIN
}

// Agendamento
model appointment {
  id           Int                  @id @default(autoincrement())
  client_id    Int
  user_id      Int
  user         user                 @relation(fields: [user_id], references: [id])
  date_time    DateTime             @default(now())
  services     AppointmentService[]
  status       status               @default(SCHEDULED)
  observations String?
}

// Serviço
model service {
  id           Int                  @id @default(autoincrement())
  name         String
  description  String?
  price        Float
  appointments AppointmentService[]
  status       status               @default(SCHEDULED)
}

// Intermediario entre serviço e agendamento - quebrar mutios pra muitos
model appointmentService {
  appointmentId Int
  appointment   appointment @relation(fields: [appointmentId], references: [id])
  serviceId     Int
  service       service     @relation(fields: [serviceId], references: [id])
  quantity      Int? 
  observations  String? 

  @@id([appointmentId, serviceId])
}

enum status {
  SCHEDULED
  CONFIRMED
  COMPLETED
  CANCELLED
}
